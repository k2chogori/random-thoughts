* Choose boring tech
* Best tool for the job - when operations are seriouc concern (reality)
* Adding tech requires company-wide visibility
* "problem" is not defined if someone wants to use new tech
* "We cant do it" is not an answer - "we could, but it would be hard"
* If you cannot accompish the goal with current toolset - then think think think
* "boring" is not bad
* known unknown - we know that something will hapen
* uknown unknown - we dont know that something can go wrong (bugs)
* tech choices MUST not happen in isolation
* Consider the solving problem with current tech stack and find the reasons why to add new one? What cost? Maintainbility? 
* Key - solve the problems that stand between you and goals (not potential issues that you may end up with)
* Switch to new - only if there is the new solution benefit is higher that previous 
